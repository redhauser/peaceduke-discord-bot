const { SlashCommandBuilder } = require("@discordjs/builders");

module.exports = {
    data: new SlashCommandBuilder()
    .setName("rolehandler")
    .setDescription("–í—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞ –≤–∏–¥–∞—á—É —Ä–æ–ª–µ–π. –¢—ñ–ª—å–∫–∏ –¥–ª—è –¢—Ä–∞—Ö–º–∏—Ä–∞.")
    .addStringOption(option => option.setName("id1").setDescription("ID –ø–µ—Ä—à–æ—ó —Ä–æ–ª—ñ.").setRequired(true))
    .addStringOption(option => option.setName("id2").setDescription("ID –¥—Ä—É–≥–æ—ó —Ä–æ–ª—ñ.").setRequired(true))
    .addStringOption(option => option.setName("id3").setDescription("ID —Ç—Ä–µ—Ç—å–æ—ó —Ä–æ–ª—ñ.").setRequired(true))
    .addStringOption(option => option.setName("id4").setDescription("ID —á–µ—Ç–≤–µ—Ä—Ç–æ—ó —Ä–æ–ª—ñ.").setRequired(true))
    .addStringOption(option => option.setName("emoji1").setDescription("–ï–º–æ–¥–∂—ñ –¥–ª—è —Ä–µ–∞–∫—Ü—ñ—ó –Ω–∞ –ø–µ—Ä—à—É —Ä–æ–ª—å.").setRequired(false))
    .addStringOption(option => option.setName("emoji2").setDescription("–ï–º–æ–¥–∂—ñ –¥–ª—è —Ä–µ–∞–∫—Ü—ñ—ó –Ω–∞ –¥—Ä—É–≥—É —Ä–æ–ª—å.").setRequired(false))
    .addStringOption(option => option.setName("emoji3").setDescription("–ï–º–æ–¥–∂—ñ –¥–ª—è —Ä–µ–∞–∫—Ü—ñ—ó –Ω–∞ —Ç—Ä–µ—Ç—é —Ä–æ–ª—å.").setRequired(false))
    .addStringOption(option => option.setName("emoji4").setDescription("–ï–º–æ–¥–∂—ñ –¥–ª—è —Ä–µ–∞–∫—Ü—ñ—ó –Ω–∞ —á–µ—Ç–≤–µ—Ä—Ç—É —Ä–æ–ª—å.").setRequired(false)),
    category: "–º–æ–¥–µ—Ä–∞—Ü—ñ—è",
    async execute(message,args,Discord,client, config) {
        if(!message.member.permissions.has("MANAGE_ROLES")) return message.reply({content: "–í–∏ –Ω–µ –º–∞—î—Ç–µ –ø—Ä–∞–≤ –Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Ü—ñ—î—ó –∫–æ–º–∞–Ω–¥–∏!", ephemeral: true});
        //–ü–æ–º—ñ–Ω—è—Ç–∏ –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–µ ID –ø—Ä–∏ –∑–∞–ø—É—Å–∫—É –Ω–∞ cf
        const channel = config.roleChannel;
        if(!args) args = [message.options.get("id1").value,message.options.get("id2").value,message.options.get("id3").value,message.options.get("id4").value,message.options.get("emoji1")?.value,message.options.get("emoji2")?.value,message.options.get("emoji3")?.value,message.options.get("emoji4")?.value];
        if(args.length<3) return message.reply({content: "–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤", ephemeral: true});
        if(message.channel.id!= channel) return message.reply({content: "–í —Ü—å–æ–º—É —á–∞—Ç—ñ –Ω–µ –º–æ–∂–Ω–∞ –≤–∏–¥–∞–≤–∞—Ç–∏ —Ä–æ–ª—ñ.", ephemeral: true});
        const role1 = message.guild.roles.cache.find(role => role.id === args[0]);
        const role2 = message.guild.roles.cache.find(role => role.id === args[1]);
        const role3 = message.guild.roles.cache.find(role => role.id === args[2]);
        const role4 = message.guild.roles.cache.find(role => role.id === args[3]);
        
        const role1ReactEmoji = args[4] || "üîµ";
        const role2ReactEmoji = args[5] || "üî¥";
        const role3ReactEmoji = args[6] || "üü°";
        const role4ReactEmoji = args[7] || "üü¢";

        let embedMessage = new Discord.MessageEmbed()
        .setColor("#FF00FF")
        .setTitle("–í–∏–±–µ—Ä–∏ —Ä–æ–ª—å!")
        .setDescription("–í–∏–±–µ—Ä–∏ —è–∫—É —Ä–æ–ª—å —Ç–∏ –± —Ö–æ—Ç—ñ–≤ –æ—Ç—Ä–∏–º–∞—Ç–∏ —ñ –≤—ñ–¥—Ä–µ–∞–≥—É–π –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ!\n(–Ø–∫—â–æ —É —Ç–µ–±–µ –≤–∂–µ —î —Ä–æ–ª—å, –∞ —Ç–∏ —Ö–æ—á–µ—à —ó—ó –ø–æ–∑–±—É—Ç–∏—Å—å, —Ç–æ –≤—ñ–¥—Ä–µ–∞–≥—É–π –∞ –ø–æ—Ç—ñ–º –∑–Ω—ñ–º–∏ —Ä–µ–∞–∫—Ü—ñ—é –Ω–∞ —Ç—É —Ä–æ–ª—å)\n\n\n" + role1ReactEmoji + "–¥–ª—è " + role1.name +"\n" + role2ReactEmoji + "–¥–ª—è " + role2.name + "\n"  + role3ReactEmoji + "–¥–ª—è " + role3.name +"\n"  + role4ReactEmoji + "–¥–ª—è " + role4.name +"\n");
        
        let reactEmbedMessage = await message.channel.send({embeds: [embedMessage]});
        reactEmbedMessage.react(role1ReactEmoji);
        reactEmbedMessage.react(role2ReactEmoji);
        reactEmbedMessage.react(role3ReactEmoji);
        reactEmbedMessage.react(role4ReactEmoji);

        client.on("messageReactionAdd", async (reaction, user) => {
            if (reaction.message.partial) await reaction.message.fetch();
            if (reaction.partial) await reaction.fetch();
            if (user.bot) return;
            if (!reaction.message.guild) return;

            if (reaction.message.channel.id == channel) {
                if(reaction.emoji.name == role1ReactEmoji) {
                    await reaction.message.guild.members.cache.get(user.id).roles.add(role1);
                }
                if(reaction.emoji.name == role2ReactEmoji) {
                    await reaction.message.guild.members.cache.get(user.id).roles.add(role2);
                }
                if(reaction.emoji.name == role3ReactEmoji) {
                    await reaction.message.guild.members.cache.get(user.id).roles.add(role3);
                }
                if(reaction.emoji.name == role4ReactEmoji) {
                    await reaction.message.guild.members.cache.get(user.id).roles.add(role4);
                }
                else {
                    return ;
                }
            }
        });
        client.on("messageReactionRemove", async (reaction, user) => {
            if (reaction.message.partial) await reaction.message.fetch();
            if (reaction.partial) await reaction.fetch();
            if (user.bot) return;
            if (!reaction.message.guild) return;

            if (reaction.message.channel.id == channel) {
                if(reaction.emoji.name == role1ReactEmoji) {
                    await reaction.message.guild.members.cache.get(user.id).roles.remove(role1);
                }
                if(reaction.emoji.name == role2ReactEmoji) {
                    await reaction.message.guild.members.cache.get(user.id).roles.remove(role2);
                }
                if(reaction.emoji.name == role3ReactEmoji) {
                    await reaction.message.guild.members.cache.get(user.id).roles.remove(role3);
                }
                if(reaction.emoji.name == role4ReactEmoji) {
                    await reaction.message.guild.members.cache.get(user.id).roles.remove(role4);
                }
                else {
                    return ;
                }
            }
        });
    }
}