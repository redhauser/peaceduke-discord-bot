const { SlashCommandBuilder } = require("@discordjs/builders");
const builders = require("@discordjs/builders");
const Discord = require("discord.js");

module.exports = {
    data: new SlashCommandBuilder()
    .setName("stats")
    .setDescription("–ü–æ–∫–∞–∑—É—î –∑–∞–≥–∞–ª—å–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ.")
    .addUserOption(option => option.setName("user").setDescription("–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á —á–∏—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤–∏ –± —Ö–æ—Ç—ñ–ª–∏ –ø–æ–±–∞—á–∏—Ç–∏.")),
    aliases: ["statistics", "—Å—Ç–∞—Ç—Å", "—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "profile", "–ø—Ä–æ—Ñ—ñ–ª—å"],
    category: "—ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è",
    hidden: false,
    botChatExclusive: true,
    djRoleRequired: false,
    async execute(message, args, client, voice, config) {

        let userid = message.mentions?.members?.first()?.id || message?.options?.get("user")?.value || (message.member?.id || message.user?.id); 
        let isRole = false;
        let statuser = await client.users.fetch(userid).catch( async () => {
            isRole = true;
        });

        if(isRole) return await client.replyOrSend({content: " ", embeds: [new Discord.MessageEmbed().setColor("#fcd514").setDescription("–î–∞–Ω–µ –∑–≥–∞–¥—É–≤–∞–Ω–Ω—è –Ω–µ —î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º!")], ephemeral: true},message);
        
        let statguilduser = (await message.guild?.members?.cache?.get(userid));
        
        let statembed = await new Discord.MessageEmbed()
        .setColor((await statuser.fetch()).accentColor)
        .setTitle("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
        .setAuthor({name: statuser.tag, iconURL: await statuser.avatarURL()})
        .setThumbnail(await statuser.avatarURL());
        
        let userDescription = "–ó–∞–≥–∞–ª—å–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ `" + ((statguilduser?.nickname) ? statguilduser.nickname : statuser.username) + "`.\n";

        //‚ú® Special ‚ú® descriptions
        if (userid == config.redhauserId) {
            userDescription += "–¶–µ–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —Ç–æ–π —â–µ –¥—É—Ä–µ–Ω—å... üíÄüíÄ";
        } else if(userid == message.guild?.ownerId) {
            userDescription += "–¶–µ–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–ª–∞—Å–Ω–∏–∫ —Ü—å–æ–≥–æ —Å–µ—Ä–≤–µ—Ä—É. üëë";
        } else if (userid == config.clientId) {
            userDescription += "–¶–µ–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á **PeaceDuke**, –¥—É–∂–µ –∫–ª–∞—Å–Ω–∏–π Discord –±–æ—Ç. " + client.botEmojis.peaceduke
        } else if (statuser.bot) {
            userDescription += "–¶–µ–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –±–æ—Ç—è—Ä–∞. üëæ";
        } else if(userid == config.specialuser1ID) {
            userDescription += "–¶–µ–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —Ç–æ–π —Å–∞–º–∏–π –ª–µ–≥–µ–Ω–¥–∞—Ä–Ω–∏–π Asstour4ik!";
        } else if(userid == config.specialuser2ID) {
            userDescription += "–¶–µ–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω—É –ø—Ä–æ—Å—Ç–æ –ø–æ–≤–Ω–∏–π artbot1d1y.";
        } else if(userid == config.specialuser3ID) {
            userDescription += "–¶–µ–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —Ç–æ–π —Å–∞–º–∏–π –ª–µ–≥–µ–Ω–¥–∞—Ä–Ω–∏–π nikistrike!";
        } else if(statuser.system) {
            userDescription += "–¶–µ–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —î —á–∞—Å—Ç–∏–Ω–æ—é Official Discord System.";
        } else if(statguilduser.premiumSince) {
            userDescription += "–¶–µ–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø—ñ–¥—Ç—Ä–∏–º–∞–≤ —Å–µ—Ä–≤–µ—Ä –±—É—Å—Ç–æ–º! " + client.botEmojis.serverboost + " –î—è–∫—É—î–º–æ!";
        } else if(statguilduser.permissions.has(Discord.Permissions.FLAGS.ADMINISTRATOR)) {
            userDescription += "–¶–µ–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –æ–¥–∏–Ω –∑ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—ñ–≤ —Ü—å–æ–≥–æ —Å–µ—Ä–≤–µ—Ä—É.";
        }

        statembed.setDescription(userDescription);
        statembed.addFields({name: "\u200B", value: "\u200B"},
                    {name:"üÜî Discord —Ç–µ–≥:", value:"`" + statuser.tag + "`", inline: true},
                    {name: "#Ô∏è‚É£ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å:", value: client.stats[userid]?.guilds[message.guildId]?.messageCount?.toString() || "–î–∞–Ω—ñ –≤—ñ–¥—Å—É—Ç–Ω—ñ.", inline: true});
        
        let status = "";
        let statusfrom = [];
        if(statguilduser.presence?.status === "offline") {
            status += "–û—Ñ–ª–∞–π–Ω ‚ñ´Ô∏è";
        } else {
            if(statguilduser.presence?.status === "online")  status += "–û–Ω–ª–∞–π–Ω üü¢";
            else if(statguilduser.presence?.status === "idle") status += "–ê–§–ö üü°";
            else if(statguilduser.presence?.status === "dnd") status += "DND ‚õî";

            //Maybe add icons in the future. No info for bots since they're bots. xd.
            if(!statguilduser.user?.bot) {
                if(statguilduser.presence?.clientStatus?.desktop) statusfrom.push("–∑ –ø–∫");
                if(statguilduser.presence?.clientStatus?.mobile) statusfrom.push("–∑ —Ç—Ñ");
                if(statguilduser.presence?.clientStatus?.web) statusfrom.push("–∑ –≤–µ–±–∞");
            }
        }
        statembed.addFields({name: "üì° –°—Ç–∞—Ç—É—Å:", value: status + "\n" + statusfrom.join(", "), inline: true});

        statembed.addFields({name: "\u200B", value: "\u200B"},
                    {name: "üåü –ú–∞—î –∞–∫–∫–∞—É–Ω—Ç –∑: ", value: builders.time(statuser.createdAt), inline: true},
                    {name: "üëã –ü—Ä–∏—î–¥–Ω–∞–≤—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä: ", value: (statguilduser ? builders.time(statguilduser?.joinedAt) : "–ù–µ —É—á–∞—Å–Ω–∏–∫ —Ü—å–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞."), inline: true},
                    {name: "\u200B", value: "\u200B"})
        .setImage(statuser.bannerURL());
        
        let userlvl = client.stats[statuser.id].guilds[message.guildId].lvl;

        if(userlvl && !statuser.bot) {
            let userxp = client.stats[statuser.id].guilds[message.guildId].xp;
            let userxptillnextlvl = (13**userlvl) - userxp;
            let ratioXpToLvl = Math.floor(userxp / (13**userlvl) * 100); 
            statembed
            .addFields({name: "üî± –†—ñ–≤–µ–Ω—å: ", value: userlvl.toString(), inline: true},
                        {name: "‚öúÔ∏è XP –¥–æ –Ω–∞—Å—Ç. —Ä—ñ–≤–Ω—è: ", value: userxptillnextlvl.toString(), inline: true},
                        {name: "üî∞ XP: ", value: userxp.toString(), inline: true});

            let progressBarUntilNextLvl = "‚û°Ô∏è";
            for(let i = 0; i<10; i++) {
                if((i+1)*10>ratioXpToLvl) {
                    progressBarUntilNextLvl+="üü•";
                } else {
                    progressBarUntilNextLvl+="üü©";
                }
            }
            progressBarUntilNextLvl+="üéâ";
            progressBarUntilNextLvl+="  **"+ratioXpToLvl+"/"+"100%**";
            statembed
            .addFields({name: "–ü—Ä–æ–≥—Ä–µ—Å—Å –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ —Ä—ñ–≤–Ω—è: ", value: progressBarUntilNextLvl});
        }

        await client.replyOrSend({embeds: [statembed]},message);

    }
}