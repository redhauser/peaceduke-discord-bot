const { SlashCommandBuilder } = require("@discordjs/builders");
const voice = require("@discordjs/voice");

module.exports = {
    data: new SlashCommandBuilder()
    .setName("queue")
    .setDescription("–ü–æ–∫–∞–∑—É—î –≤–∞–º –ø–æ—Ç–æ—á–Ω—É —á–µ—Ä–≥—É –≤ –ø–ª–µ–π–ª—ñ—Å—Ç—ñ –º—É–∑–∏–∫–∞–ª—å–Ω–æ–≥–æ –±–æ—Ç–∞."),
    category: "–º—É–∑–∏–∫–∞",
    async execute(message, args, Discord, client, player, config) {
        if(message.channel.id !== config.botChannel) return await message.reply({content: "–¶—é –∫–æ–º–∞–Ω–¥—É –º–æ–∂–Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ —Ç—ñ–ª—å–∫–∏ —É –±–æ—Ç-—á–∞—Ç—ñ!", ephemeral: true});
        if(!client.queue[0]) {
            await message.reply({content: "–ù–∞ –¥–∞–Ω–∏–π –º–æ–º–µ–Ω—Ç —á–µ—Ä–≥–∞ –ø—É—Å—Ç–∞."});
        } else {
            let isTheQueueTooLong = client.queue.length>16;
            let content = "–ü–æ—Ç–æ—á–Ω–∏–π –ø–ª–µ–π–ª—ñ—Å—Ç: \n‚îé(1)"+(player.state.status==="paused" ? "‚è∏Ô∏è" : "‚ñ∂") +" " + " [" + client.queue[0].timestamp + "] " + client.queue[0].title + "\n‚ÄÑ‚ùô\n";
            for(let i = 1;i<client.queue.length;i++) {
                content += "‚î†(" + (i+1) + ")‚Ü™Ô∏è " + " [" + client.queue[i].timestamp +"] " + client.queue[i].title + "\n";
                if(i==15) i=client.queue.length;
            }
            content += "‚îï-----------------------------------------------\n";
            let addInfo = "";
            if(isTheQueueTooLong) addInfo+="–ê —Ç–∞–∫–æ–∂ –≤ —á–µ—Ä–∑—ñ —â–µ " + (client.queue.length-16) + " –ø—ñ—Å–µ–Ω—å!";
            if(player.isLooped === "on") addInfo+="üîÇ: –ü—Ä–æ–≥—Ä–∞–≤–∞—á —Å—Ç–æ—ó—Ç—å –Ω–∞ –ø–æ–≤—Ç–æ—Ä—ñ!\n";
            if(player.isLooped === "all") addInfo+="üîÑ: –ü—Ä–æ–≥—Ä–∞–≤–∞—á —Å—Ç–æ—ó—Ç—å –Ω–∞ –ø–æ–≤—Ç–æ—Ä—ñ –≤—Å—ñ—î—ó —á–µ—Ä–≥–∏!\n";
            addInfo += player.state.status==="paused" ? "‚è∏Ô∏è: –ü—Ä–æ–≥—Ä–∞—á–∞–≤–∞—á —Å—Ç–æ—ó—Ç—å –Ω–∞ –ø–∞—É–∑—ñ.\n" : "";
            //await message.reply({content: content});
            let embedLink = new Discord.MessageEmbed()
        .setColor("#ac00fc")
        .setTitle("–ó–∞—Ä–∞–∑ –≥—Ä–∞—î: " + client.queue[0].title)
        .setURL(client.queue[0].url)
        .setImage(client.queue[0].image)
        .setDescription(content+addInfo)
        .setFooter({text: "–¶–µ–π –º—É–∑–∏–∫–∞–ª—å–Ω–∏–π –±–æ—Ç –∑–∞—Å–ø–æ–Ω—Å–æ—Ä–æ–≤–∞–Ω–∏–π —Å–µ—Ä–≤–µ—Ä–æ–º Correction Fluid", iconURL: "https://cdn.discordapp.com/attachments/760919347131973682/940014844449546290/epicemoji.png"});
        let actionRow = new Discord.MessageActionRow()
        .addComponents(
            new Discord.MessageButton()
            .setCustomId("loop")
            .setLabel("üîÇ")
            .setStyle("PRIMARY"),
            new Discord.MessageButton()
            .setCustomId("skip")
            .setLabel("‚è≠Ô∏è")
            .setStyle("PRIMARY"),
            new Discord.MessageButton()
            .setCustomId("pause")
            .setLabel("‚è∏Ô∏è") //‚ñ∂Ô∏è
            .setStyle("PRIMARY"),
            new Discord.MessageButton()
            .setCustomId("clear")
            .setLabel("‚èπÔ∏è")
            .setStyle("PRIMARY"),
            new Discord.MessageButton()
            .setCustomId("leave")
            .setLabel("‚Ü©Ô∏è")
            .setStyle("PRIMARY")
        );
        if(message.type != "APPLICATION_COMMAND") return await message.reply({embeds: [embedLink]});
        await message.reply({embeds: [embedLink], components: [actionRow]});
        let reply = (await message.fetchReply());
        const filter = (i) => i.message?.interaction?.id === reply.interaction?.id;
        const collector = message.channel.createMessageComponentCollector({filter, time: 13*60*1000});
        collector.on("collect", async (m) => {
            collector.resetTimer();
            await m.deferUpdate();
            if(m.customId === "loop") {
                if(player.isLooped === "off") {
                    player.isLooped = "on";
                    actionRow.components[0].label = "üîÑ";
                } else if(player.isLooped === "on") {
                    player.isLooped = "all";
                    actionRow.components[0].label = "‚û°Ô∏è"
                } else {
                    player.isLooped = "off";
                    actionRow.components[0].label = "üîÇ";
                }
            }
            if(m.customId === "skip") {
                await message.channel.send("‚è≠Ô∏è–ü—Ä–æ–ø—É—â–µ–Ω–æ " + client.queue[0].title + " .");
                if(player.isLooped != "all") {
                    client.queue.shift();
                    await player.stop();
                } else {
                    client.queue.push(client.queue[0]);
                    client.queue.shift();
                    await player.stop();
                }
            }
            if(m.customId === "pause") {
                if(player.state.status==="paused") {
                    player.unpause();
                    actionRow.components[2].label = "‚è∏Ô∏è";
                } else {
                    player.pause();
                    actionRow.components[2].label = "‚ñ∂Ô∏è";
                }
            }
            if(m.customId === "clear") {
                client.queue = [];
                await player.stop();
            }
            if(m.customId === "leave") {
                client.queue = [];
                let connection = voice.getVoiceConnection(player.vc.guild.id);
                player.vc = false;
                player.isLooped = "off";
                await player.stop();
                connection?.destroy();
                await message.channel.send("–ü–æ–∫–∏–Ω—É–≤ –≥–æ–ª–æ—Å–æ–≤–∏–π –∫–∞–Ω–∞–ª —ñ —Ç–∏–º —Å–∞–º–∏–º –æ—á–∏—Å—Ç–∏–≤ —á–µ—Ä–≥—É.");
            }
            if(client.queue[0]) {
                isTheQueueTooLong = client.queue.length>16;
            content = "–ü–æ—Ç–æ—á–Ω–∏–π –ø–ª–µ–π–ª—ñ—Å—Ç: \n‚îé(1)"+(player.state.status==="paused" ? "‚è∏Ô∏è" : "‚ñ∂") +" " + " [" + client.queue[0].timestamp + "] " + client.queue[0].title + "\n‚ÄÑ‚ùô\n";
            for(let i = 1;i<client.queue.length;i++) {
                content += "‚î†(" + (i+1) + ")‚Ü™Ô∏è " + " [" + client.queue[i].timestamp +"] " + client.queue[i].title + "\n";
                if(i==15) i=client.queue.length;
            }
            content += "‚îï-----------------------------------------------\n";
            addInfo = "";
            if(isTheQueueTooLong) addInfo+="–ê —Ç–∞–∫–æ–∂ –≤ —á–µ—Ä–∑—ñ —â–µ " + (client.queue.length-16) + " –ø—ñ—Å–µ–Ω—å!";
            if(player.isLooped === "on") addInfo+="üîÇ: –ü—Ä–æ–≥—Ä–∞–≤–∞—á —Å—Ç–æ—ó—Ç—å –Ω–∞ –ø–æ–≤—Ç–æ—Ä—ñ!\n";
            if(player.isLooped === "all") addInfo+="üîÑ –ü—Ä–æ–≥—Ä–∞–≤–∞—á —Å—Ç–æ—ó—Ç—å –Ω–∞ –ø–æ–≤—Ç–æ—Ä—ñ –≤—Å—ñ—î—ó —á–µ—Ä–≥–∏!\n";
            addInfo += player.state.status==="paused" ? "‚è∏Ô∏è: –ü—Ä–æ–≥—Ä–∞—á–∞–≤–∞—á —Å—Ç–æ—ó—Ç—å –Ω–∞ –ø–∞—É–∑—ñ.\n" : "";
            await message.editReply({embeds: [new Discord.MessageEmbed(embedLink)
                .setDescription(content+addInfo)
                .setTitle("–ó–∞—Ä–∞–∑ –≥—Ä–∞—î: " + client.queue[0].title)
                .setURL(client.queue[0].url)
                .setImage(client.queue[0].image)], components: [actionRow]});
            } else {
                collector.stop();
                await message.editReply({content: "–ß–µ—Ä–≥–∞ –∑–∞–∫—ñ–Ω—á–∏–ª–∞—Å—è!", embeds: [], components: []});
            }
        });
        collector.on("end", async () => {
            for(let i = 0;i<actionRow.components.length;i++) {
                actionRow.components[i].setDisabled(true);
            }
            if(client.queue[0]) {
                isTheQueueTooLong = client.queue.length>16;
                content = "–ü–æ—Ç–æ—á–Ω–∏–π –ø–ª–µ–π–ª—ñ—Å—Ç: \n‚îé(1)"+(player.state.status==="paused" ? "‚è∏Ô∏è" : "‚ñ∂") +" " + " [" + client.queue[0].timestamp + "] " + client.queue[0].title + (player.isLooped ? "üîÑ" : "") + "\n‚ÄÑ‚ùô\n";
                for(let i = 1;i<client.queue.length;i++) {
                    content += "‚î†(" + (i+1) +")‚Ü™Ô∏è " + " [" + client.queue[i].timestamp +"] " + client.queue[i].title + "\n";
                    if(i==15) i=client.queue.length;
                }
                content += "‚îï-----------------------------------------------\n";
                addInfo = "";
                if(isTheQueueTooLong) addInfo+="–ê —Ç–∞–∫–æ–∂ –≤ —á–µ—Ä–∑—ñ —â–µ " + (client.queue.length-16) + " –ø—ñ—Å–µ–Ω—å!";
                if(player.isLooped === "on") addInfo+="üîÇ: –ü—Ä–æ–≥—Ä–∞–≤–∞—á —Å—Ç–æ—ó—Ç—å –Ω–∞ –ø–æ–≤—Ç–æ—Ä—ñ!\n";
                if(player.isLooped === "all") addInfo+="üîÑ –ü—Ä–æ–≥—Ä–∞–≤–∞—á —Å—Ç–æ—ó—Ç—å –Ω–∞ –ø–æ–≤—Ç–æ—Ä—ñ –≤—Å—ñ—î—ó —á–µ—Ä–≥–∏!\n";
                addInfo += player.state.status==="paused" ? "‚è∏Ô∏è: –ü—Ä–æ–≥—Ä–∞—á–∞–≤–∞—á —Å—Ç–æ—ó—Ç—å –Ω–∞ –ø–∞—É–∑—ñ.\n" : "";
                await reply.edit({content: "–í–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ /queue –∑–Ω–æ–≤—É, —â–æ–±–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—è –∫–Ω–æ–ø–∫–∞–º–∏!", embeds: [new Discord.MessageEmbed(embedLink)
                    .setDescription(content+addInfo)
                    .setTitle("–ó–∞—Ä–∞–∑ –≥—Ä–∞—î: " + client.queue[0].title)
                    .setURL(client.queue[0].url)
                    .setImage(client.queue[0].image)], components: []});
                }
        });
        }
    }
}