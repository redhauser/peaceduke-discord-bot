const { SlashCommandBuilder } = require("@discordjs/builders");
const ytdl = require("ytdl-core");
const ffmpeg = require("fluent-ffmpeg");
const spotifyAPI = require("spotify-web-api-node");
const ytSearch = require("yt-search");

module.exports = {
    data: new SlashCommandBuilder()
    .setName("ytmp3")
    .setDescription("–ö–æ–Ω–≤–µ—Ä—Ç—É—î YT/Spotify —Ç—Ä–µ–∫ —É MP3 —Ñ–æ—Ä–º–∞—Ç. –í–∏–¥–∞—Å—Ç—å –ø–æ–º–∏–ª–∫—É —è–∫—â–æ –∫–æ–Ω–≤–µ—Ä—Ç–æ–≤–∞–Ω–∏–π —Ñ–∞–π–ª 8–ú–ë+")
    .addStringOption(option => option.setName("url").setDescription("–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ YouTube –≤—ñ–¥–µ–æ/Spotify —Ç—Ä–µ–∫, —è–∫–∏–π –≤–∏ —Ö–æ—á–µ—Ç–µ –∫–æ–Ω–≤–µ—Ä—Ç—É–≤–∞—Ç–∏").setRequired(true))
    .addStringOption(option => option.setName("name").setDescription("–ù–∞–∑–≤–∞ .mp3 —Ñ–∞–π–ª–∞. –°—Ç–∞–≤–∏—Ç–∏ .mp3 –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ.").setRequired(false)),
    aliases: ["youtubemp3", "youtubeconvert", "—é—Ç–º–ø3", "—é—Ç—É–±–º–ø3"],
    category: "–º—É–∑–∏–∫–∞",
    hidden: false,
    botChatExclusive: true,
    djRoleRequired: false,
    async execute(message, args, Discord, client, voice, config) {
        
        if(message.type==="APPLICATION_COMMAND") { 
            args = [message.options.get("url").value, message.options.get("name")?.value];
        } else {
            args = [args[0], args.slice(1).join(" ")];
        }

        let previewSongEmbed = new Discord.MessageEmbed().setColor("#FF0000");

        if(!args[0]) { return await client.replyOrSend({content: " ", embeds:[new Discord.MessageEmbed(previewSongEmbed).setDescription("–í–∏ –Ω–µ –≤–∫–∞–∑–∞–ª–∏ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –≤—ñ–¥–µ–æ.")], ephemeral: true},message)};
        if(!ytdl.validateURL(args[0]) && !args[0].startsWith("https://open.spotify.com/track")) return await client.replyOrSend({content: " ",embeds:[new Discord.MessageEmbed(previewSongEmbed).setDescription("–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –≤–∞—à–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è.")],ephemeral: true},message);

        let daReply = await client.replyOrSend({content: " ", embeds:[new Discord.MessageEmbed(previewSongEmbed).setDescription("–í–∞—à–∏–π —Ñ–∞–π–ª –æ–±—Ä–æ–±–ª—é—î—Ç—å—Å—è.")],}, message);

        if(message.type==="APPLICATION_COMMAND") {
            daReply = await message.fetchReply();
        } else {
            await message.suppressEmbeds(true);
        }

        //Only for spotify tracks.
        if(args[0].startsWith("https://open.spotify.com/track")) {
            const spotify = new spotifyAPI({
                clientId: config.spotifyClientId,
                clientSecret: config.spotifyClientSecret,
                accessToken: config.spotifyAccessToken
            });

            let idOfLink;

            if(args[0].indexOf("?") !== "-1") {
                idOfLink = (args[0].slice(31, (args[0].indexOf("?"))));
            } else {
                idOfLink = (args[0].slice(31, args[0].length));
            }

            let track;
            try {
            track = await spotify.getTrack(idOfLink);
            } catch (err) {
                console.log(`[${message.guild.name}] –ü–æ–º–∏–ª–∫–∞ —É –∫–æ–º–∞–Ω–¥—ñ ytmp3: spotify.getTrack(): `, err);
                return await daReply.edit({content: " ", embeds: [new Discord.MessageEmbed(previewSongEmbed).setDescription("–ù–µ –∑–º—ñ–≥ –Ω–∞–π—Ç–∏ **Spotify** —Ç—Ä–µ–∫. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –≤–∞—à–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è!")]});
            }

            let trackName = track.body.artists[0].name + " - " + track.body.name;

            const videoFinder = async (query) => {
                const videoResult = await ytSearch(query);
    
                return (videoResult.videos.length > 1) ? videoResult.videos[0] : null;
            }

            let spotisong = await videoFinder(track.body.artists[0].name + " - " + track.body.name);
            args[0] = spotisong.url;
        }

        let song = ytdl(args[0], {filter: "audioonly", highWaterMark: 1<<25});
        let songdata;

        try {
            songdata = await ytdl.getBasicInfo(args[0], function(err, info) {console.log(err, info);});
        } catch (err) {
            console.log("[" + message.guild.name + "] –í—ñ–¥–±—É–ª–∞—Å—å –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ ytdl.getBasicInfo —É –∫–æ–º–∞–Ω–¥—ñ ytmp3:", err);
            return await daReply.edit({content: " ", embeds: [new Discord.MessageEmbed(previewSongEmbed).setDescription("–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—ó –≤—ñ–¥–µ–æ —É MP3.").setFooter(null).setThumbnail(null)]});
        }

        previewSongEmbed = new Discord.MessageEmbed()
        .setColor("#FF0000")
        .setThumbnail(songdata.videoDetails.thumbnails[0].url)
        .setDescription(`üîÄ –ö–æ–Ω–≤–µ—Ä—Ç—É—é –ø—ñ—Å–Ω—é \"**${songdata.videoDetails.title}**\"[**${Math.floor(songdata.videoDetails.lengthSeconds/60) + ":" + (songdata.videoDetails.lengthSeconds%60<10 ? ("0" + songdata.videoDetails.lengthSeconds%60) : songdata.videoDetails.lengthSeconds%60)}**]\n–∑ –∫–∞–Ω–∞–ª—É **${songdata.videoDetails.ownerChannelName}**`)
        .setFooter({text: `–ö–æ–Ω–≤–µ—Ä—Ç—É—é –ø—ñ—Å–Ω—é –≤—ñ–¥ ${message.member.user.tag}`, iconURL: await message.member.user.avatarURL()})
        await daReply.edit({content: " ", embeds: [previewSongEmbed], components: []});

        try {
        let output = ffmpeg(song)
        .toFormat("mp3")
        .on("end", async () => {
        try {
            await daReply.edit({content: " ", embeds: [new Discord.MessageEmbed(previewSongEmbed).setDescription("**–û—Å—å –≤–∞—à–∏–π MP3!**").setFooter(null).setThumbnail(null)], files: [{attachment: "./media/audio.mp3", name: (args[1] || songdata.videoDetails.title) + ".mp3"}]});
            console.log("[" + message.guild.name + "] –í–¥–∞–ª–æ –∫–æ–Ω–≤–µ—Ä—Ç—É–≤–∞–≤ \"" + songdata.videoDetails.title +  "\" –≤—ñ–¥–µ–æ —É mp3.");
        } catch (err) {
            console.log("[" + message.guild.name + "] –í—ñ–¥–±—É–ª–∞—Å—å –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∫–æ–Ω–≤–µ—Ä—Ç—É–≤–∞–Ω–Ω—ñ –≤ mp3:", err);
            await daReply.edit({content: " ", embeds: [new Discord.MessageEmbed(previewSongEmbed).setDescription("–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—ó –≤—ñ–¥–µ–æ —É MP3.").setFooter(null).setThumbnail(null)]});
        }
        }).output("./media/audio.mp3").run();
    
        } catch (err) {
            console.log("[" + message.guild.name + "] –í—ñ–¥–±—É–ª–∞—Å—å –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∫–æ–Ω–≤–µ—Ä—Ç—É–≤–∞–Ω–Ω—ñ –≤ mp3:", err);
            await daReply.edit({content: " ", embeds: [new Discord.MessageEmbed(previewSongEmbed).setDescription("–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—ó –≤—ñ–¥–µ–æ —É MP3.").setFooter(null).setThumbnail(null)]});
        } 

    }
}